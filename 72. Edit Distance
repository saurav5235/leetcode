class Solution 
{
    int fun(String s,String t,int i,int j,int m,int n,int[][] dp)
    {   
        if(i==m)
            return n-j;
        if(j==n)
            return m-i;
        
        if(dp[i][j]!=-1)
            return dp[i][j];
        
        if(s.charAt(i)==t.charAt(j))
        {
            return dp[i][j]=fun(s,t,i+1,j+1,m,n,dp);
        }
        
            int op1 = fun(s,t,i,j+1,m,n,dp);
            int op2 = fun(s,t,i+1,j+1,m,n,dp);
            int op3 = fun(s,t,i+1,j,m,n,dp);
        return dp[i][j]=Math.min(Math.min(op1,op2),op3)+1;
    }
    
    public int minDistance(String word1, String word2) 
    {
        int m = word1.length(),n=word2.length();
        int dp[][] = new int[m][n];
        for(int i=0;i<m;i++)
                Arrays.fill(dp[i],-1);
		return fun(word1,word2,0,0,m,n,dp);
    }
}
